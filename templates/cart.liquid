
<div class="page-width page-content">

  {% include 'breadcrumbs' %}

  <div class="grid">
    <div class="grid__item">
      {% if cart.item_count > 0 %}
        <header class="section-header">
          <h1 class="section-header__title">{{ 'cart.general.title' | t }}</h1>
        </header>

        <form action="/cart" method="post" novalidate class="cart">

          <div class="cart__row small--hide cart__header-labels">
            <div class="grid grid--full">
              <div class="grid__item medium-up--two-fifths medium-up--push-three-fifths">
                <div class="grid grid--full">
                  <div class="grid__item one-third small--half text-center">
                    {{ 'cart.label.quantity' | t }}
                  </div>
                  <div class="grid__item two-thirds small--half text-right">
                    {{ 'cart.label.total' | t }}
                  </div>
                </div>
              </div>
            </div>
          </div>

          {% for item in cart.items %}

            <div class="cart__row">
              <div class="grid grid--full cart__row--table-large">

                <div class="grid__item medium-up--three-fifths">
                  <div class="grid">

                    <div class="grid__item one-quarter">
                      <a href="{{ item.url | within: collections.all }}" class="cart__image">
                        {%- assign img_url = item | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
                        <img class="lazyload"
                            data-src="{{ img_url }}"
                            data-widths="[180, 360, 540]"
                            data-aspectratio="{{ item.aspect_ratio }}"
                            data-sizes="auto"
                            alt="{{ item.title | escape }}">
                      </a>
                    </div>

                    <div class="grid__item three-quarters">
                      <a href="{{ item.url }}" class="h4 cart__product-name">
                        {{ item.product.title }}
                      </a>
                      {% unless item.variant.title contains 'Default' %}
                        <p class="cart__product-meta">
                          {{ item.variant.title }}
                        </p>
                      {% endunless %}

                      {% assign property_size = item.properties | size %}

                      {% if property_size > 0 %}
                        

{% for p in item.properties %}
                          {% assign first_character_in_key = p.first | truncate: 1, '' %}
                          {% unless p.last == blank or first_character_in_key == '_' %}
                            {{ p.first }}:

                            {% if p.last contains '/uploads/' %}
                              <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                            {% else %}
                              {{ p.last }}
                            {% endif %}

                            <br>
                          {% endunless %}
                        {% endfor %}

                      {% endif %}

                      {% if item.selling_plan_allocation != empty  %}
  <span class="selling-plan-details" data-bsub-item-key="{{item.key}}">
    {{item.selling_plan_allocation.selling_plan.name}}
  </span>
{% endif %}

                      <p class="cart__product-meta">
                        <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="btn btn--small">
                          {{ 'cart.general.remove' | t }}
                        </a>
                      </p>
                    </div>

                  </div>
                </div>

                <div class="grid__item medium-up--two-fifths">
                  <div class="grid grid--full cart__row--table">

                    <div class="grid__item one-third text-center">

                      <label for="updates_{{ item.key }}" class="visually-hidden">{{ 'cart.label.quantity' | t }}</label>
                      <input type="number" name="updates[]" id="updates_{{ item.key }}" class="cart__product-qty" value="{{ item.quantity }}" min="0" data-id="{{ item.key }}">

                    </div>

                    <div class="grid__item two-thirds text-right">
                      {% if item.original_line_price != bold_item_line_price %}
                        <small class="cart__price cart__price--strikethrough">{{ item.original_line_price | money }}</small>
                      {% endif %}

                      <span class="cart__price">{{ bold_item_price | money }}</span>

                      {% assign discounts_size = item.discounts | size %}
                      {% if discounts_size > 0 %}
                        {% for discount in item.discounts %}
                          <small class="cart__discount">{{ discount.title }}</small>
                        {% endfor %}
                      {% endif %}
                    </div>
                  </div>
                </div>

              </div>
            </div>
          {% endfor %}

          <div class="cart__row">
            <div class="grid grid--full cart__row--table-large">
              {% comment %}
                Optional, add a textarea for special notes
                  - Your theme settings can turn this on or off. Default is on.
                  - Make sure you have name="note" for the message to be submitted properly
              {% endcomment %}
              {% if settings.cart_notes_enable %}
                <div class="grid__item medium-up--seven-twelfths">
                  <div class="cart__note">
                    <label for="CartSpecialInstructions">{{ 'cart.general.note' | t }}</label>
                    <textarea name="note" class="input-full" id="CartSpecialInstructions">{{ cart.note }}</textarea>
                  </div>
                </div>
              {% endif %}
              <div class="grid__item medium-up--five-twelfths text-center medium-up--text-right{% unless settings.cart_notes_enable %} medium-up--push-seven-twelfths{% endunless %}">
                <div class="grid grid--full cart__row--table">
                  <div class="grid__item one-half medium-up--two-thirds medium-up--text-center">
                    <p class="h4 cart__subtotal">{{ 'cart.general.subtotal' | t }}</p>
                  </div>
                  <div class="grid__item one-half medium-up--one-third">
                    <p class="h4 cart__subtotal">{{ bold_cart_total_price | money }}</p>
                  </div>
                </div>

                {% if cart.total_discounts > 0 %}
                  {% assign cartTotalDiscounts = cart.total_discounts | money %}
                  <p class="cart__savings">{{ 'cart.general.savings_html' | t: savings: cartTotalDiscounts }}</p>
                {% endif %}
                <small>
                  {{ 'cart.general.shipping_at_checkout' | t }}<br />
                  {% if settings.enable_currencies %}
                  {{ 'cart.general.orders_processed_in_currency_html' | t: currency: shop.currency }}
                  {% endif %}
                </small>
                {% if settings.cart_terms_conditions_enable %}
                  <p class="ajaxcart__note ajaxcart__note--terms">
                    <input type="checkbox" id="CartPageAgree" />
                    <label for="CartPageAgree">
                      {% if settings.cart_terms_conditions_link != blank %}
                        {{ 'cart.general.terms_html' | t: url: settings.cart_terms_conditions_link }}
                      {% else %}
                        {{ 'cart.general.terms' | t }}
                      {% endif %}
                    </label>
                  </p>
                {% endif %}

                {% if show_paypal and additional_checkout_buttons and settings.cart_additional_buttons %}
                  <div class="additional_checkout_buttons">{{ content_for_additional_checkout_buttons }}</div>
                {% endif %}

                <button type="submit" name="update" class="btn btn--no-animate update-cart">
                  {{ 'cart.general.update' | t }}
                </button>
                {{ bold_ro_cart }}
<button type="submit" name="checkout" class="btn--no-animate cart__checkout{% if settings.cart_terms_conditions_enable %} cart__checkout--page{% endif %}">
                  {{ 'cart.general.checkout' | t }}
                </button>
              </div>
            </div>

          </div>
{% include 'shipping-calculator' %}
        </form>

      {% else %}
        <header class="section-header">
          <h1 class="section-header__title">{{ 'cart.general.title' | t }}</h1>
          <p>{{ 'cart.general.empty' | t }}</p>
          <p class="rte">{{ 'cart.general.continue_browsing_html' | t }}</p>
        </header>
      {% endif %}
    </div>
    
  </div>
</div>
<script>
  theme.strings = {
      shippingCalcSubmitButton: {{ settings.shipping_calculator_submit_button_label | default: 'Calculate shipping' | json }},
      shippingCalcSubmitButtonDisabled: {{ settings.shipping_calculator_submit_button_label_disabled | default: 'Calculating...' | json }},
      {% if customer %}shippingCalcCustomerIsLoggedIn: true,{% endif %}
      shippingCalcMoneyFormat: {{ shop.money_with_currency_format | json }}
  }
</script>

<script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.10/handlebars.min.js"></script>
<script src="/services/javascripts/countries.js"></script>
<script>
"object"==typeof Countries&&(Countries.updateProvinceLabel=function(e,t){if("string"==typeof e&&Countries[e]&&Countries[e].provinces){if("object"!=typeof t&&(t=document.getElementById("address_province_label"),null===t))return;t.innerHTML=Countries[e].label;var r=jQuery(t).parent();r.find("select");r.find(".custom-style-select-box-inner").html(Countries[e].provinces[0])}}),"undefined"==typeof Shopify.Cart&&(Shopify.Cart={}),Shopify.Cart.ShippingCalculator=function(){var _config={submitButton:"Calculate shipping",submitButtonDisabled:"Calculating...",templateId:"shipping-calculator-response-template",wrapperId:"wrapper-response",customerIsLoggedIn:!1,moneyFormat:"${{amount}}"},_render=function(e){var t=jQuery("#"+_config.templateId),r=jQuery("#"+_config.wrapperId);if(t.length&&r.length){var templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var n=Handlebars.compile(jQuery.trim(t.text())),a=n(e);if(jQuery(a).appendTo(r),"undefined"!=typeof Currency&&"function"==typeof Currency.convertAll){var i="";jQuery("[name=currencies]").size()?i=jQuery("[name=currencies]").val():jQuery("#currencies span.selected").size()&&(i=jQuery("#currencies span.selected").attr("data-currency")),""!==i&&Currency.convertAll(shopCurrency,i,"#wrapper-response span.money, #estimated-shipping span.money")}}},_enableButtons=function(){jQuery(".get-rates").removeAttr("disabled").removeClass("disabled").val(_config.submitButton)},_disableButtons=function(){jQuery(".get-rates").val(_config.submitButtonDisabled).attr("disabled","disabled").addClass("disabled")},_getCartShippingRatesForDestination=function(e){var t={type:"POST",url:"/cart/prepare_shipping_rates",data:jQuery.param({shipping_address:e}),success:_pollForCartShippingRatesForDestination(e),error:_onError};jQuery.ajax(t)},_pollForCartShippingRatesForDestination=function(e){var t=function(){jQuery.ajax("/cart/async_shipping_rates",{dataType:"json",success:function(r,n,a){200===a.status?_onCartShippingRatesUpdate(r.shipping_rates,e):setTimeout(t,500)},error:_onError})};return t},_fullMessagesFromErrors=function(e){var t=[];return jQuery.each(e,function(e,r){jQuery.each(r,function(r,n){t.push(e+" "+n)})}),t},_onError=function(XMLHttpRequest,textStatus){jQuery("#estimated-shipping").hide(),jQuery("#estimated-shipping em").empty(),_enableButtons();var feedback="",data=eval("("+XMLHttpRequest.responseText+")");feedback=data.message?data.message+"("+data.status+"): "+data.description:"Error : "+_fullMessagesFromErrors(data).join("; ")+".","Error : country is not supported."===feedback&&(feedback="We do not ship to this destination."),_render({rates:[],errorFeedback:feedback,success:!1}),jQuery("#"+_config.wrapperId).show()},_onCartShippingRatesUpdate=function(e,t){_enableButtons();var r="";if(t.zip&&(r+=t.zip+", "),t.province&&(r+=t.province+", "),r+=t.country,e.length){"0.00"==e[0].price?jQuery("#estimated-shipping em").html("FREE"):jQuery("#estimated-shipping em").html(_formatRate(e[0].price));for(var n=0;n<e.length;n++)e[n].price=_formatRate(e[n].price)}_render({rates:e,address:r,success:!0}),jQuery("#"+_config.wrapperId+", #estimated-shipping").fadeIn()},_formatRate=function(e){function t(e,t){return"undefined"==typeof e?t:e}function r(e,r,n,a){if(r=t(r,2),n=t(n,","),a=t(a,"."),isNaN(e)||null==e)return 0;e=(e/100).toFixed(r);var i=e.split("."),o=i[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1"+n),s=i[1]?a+i[1]:"";return o+s}if("function"==typeof Shopify.formatMoney)return Shopify.formatMoney(e,_config.moneyFormat);"string"==typeof e&&(e=e.replace(".",""));var n="",a=/\{\{\s*(\w+)\s*\}\}/,i=_config.moneyFormat;switch(i.match(a)[1]){case"amount":n=r(e,2);break;case"amount_no_decimals":n=r(e,0);break;case"amount_with_comma_separator":n=r(e,2,".",",");break;case"amount_no_decimals_with_comma_separator":n=r(e,0,".",",")}return i.replace(a,n)};return _init=function(){new Shopify.CountryProvinceSelector("address_country","address_province",{hideElement:"address_province_container"});var e=jQuery("#address_country"),t=jQuery("#address_province_label").get(0);"undefined"!=typeof Countries&&(Countries.updateProvinceLabel(e.val(),t),e.change(function(){Countries.updateProvinceLabel(e.val(),t)})),jQuery(".get-rates").click(function(){_disableButtons(),jQuery("#"+_config.wrapperId).empty().hide();var e={};e.zip=jQuery("#address_zip").val()||"",e.country=jQuery("#address_country").val()||"",e.province=jQuery("#address_province").val()||"",_getCartShippingRatesForDestination(e)}),_config.customerIsLoggedIn&&jQuery(".get-rates:eq(0)").trigger("click")},{show:function(e){e=e||{},jQuery.extend(_config,e),jQuery(function(){_init()})},getConfig:function(){return _config},formatRate:function(e){return _formatRate(e)}}}();
</script>
<script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
<script>

Shopify.Cart.ShippingCalculator.show( {
  submitButton: theme.strings.shippingCalcSubmitButton,
  submitButtonDisabled: theme.strings.shippingCalcSubmitButtonDisabled,
  customerIsLoggedIn: theme.strings.shippingCalcCustomerIsLoggedIn,
  moneyFormat: theme.strings.shippingCalcMoneyFormat
} );
</script>
  
  